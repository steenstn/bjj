{"version":3,"sources":["components/LoginForm.js","components/moves/MovesList.js","components/moves/MoveComponent.js","components/trainingsessions/TrainingSessionForm.js","components/trainingsessions/TrainingSessionsList.js","components/trainingsessions/TrainingSessionComponent.js","components/Dashboard.js","components/RegistrationForm.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","state","connectedToBackend","_this2","fetch","process","then","result","status","setState","event","_this3","preventDefault","data","FormData","target","object","forEach","value","key","json","JSON","stringify","method","body","headers","Content-Type","res","localStorage","setItem","token","console","log","history","push","error","react_default","a","createElement","onSubmit","id","name","type","Link","to","Component","MovesList","toggleVisible","newShowItems","showItems","slice","moves","map","m","index","onClick","description","MoveComponent","getItem","Authorization","concat","moves_MovesList","TrainingSessionForm","inputErrorLengthMin","inputErrorDate","onNewTrainingSession","handleForm","current","reset","inputValidationMinutes","input","test","lengthMin","inputValidationDate","date","currentDate","React","createRef","Date","ref","htmlFor","es","selected","onChange","dateFormat","style","color","TrainingSessionsList","handleDelete","updatedList","sessions","filter","session","deleteDialogOpen","openDeleteDialog","sessionID","closeDeleteDialog","render","_this$state","trainingType","Dialog_default","open","onClose","aria-describedby","DialogContent_default","DialogContentText_default","DialogActions_default","isLoaded","TrainingSessionComponent","componentDidMount","handleNewTrainingSession","trainingSession","newSessions","trainingsessions_TrainingSessionForm","trainingsessions_TrainingSessionsList","Dashboard","moves_MoveComponent","trainingsessions_TrainingSessionComponent","RegistrationForm","registrationSuccessful","errorMessage","response","_ref","ok","message","Main","Switch","Route","path","component","exact","App","components_Main","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9185f29e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            connectedToBackend: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/test\")\r\n          .then(\r\n            (result) => {\r\n                if(result.status === 200) {\r\n                    this.setState( {connectedToBackend: true});\r\n                }\r\n            }\r\n          )\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        var object = {};\r\n        data.forEach(function(value, key){\r\n            object[key] = value;\r\n        });\r\n        var json = JSON.stringify(object);\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/user/login\", {\r\n            method: 'POST',\r\n            body: json,\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            },\r\n          })\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              localStorage.setItem(\"token\", result.token);\r\n              console.log(\"yay\", result);\r\n              this.props.history.push('/dashboard');\r\n            },\r\n            (error) => {\r\n              console.log(\"error\", error);\r\n            }\r\n          );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>{this.state.connectedToBackend ? \"Connected\" : \"Connecting..\"}</p>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <label>Username</label>\r\n                <input id=\"username\" name=\"username\" type=\"text\"/>\r\n                <label>Password</label>\r\n                <input id=\"password\" name=\"password\" type=\"password\" />\r\n                <button>Login</button>\r\n                </form>\r\n                <Link to=\"/register\"><button>Register new user</button></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\n\r\nclass MovesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {showItems: []};\r\n    }\r\n\r\n    toggleVisible = (id)  => {\r\n        let newShowItems = this.state.showItems.slice();\r\n        newShowItems[id] = !newShowItems[id];\r\n        this.setState({ showItems: newShowItems });\r\n    }\r\n    \r\n    render() {\r\n        const moves = this.props.moves;\r\n        return (\r\n            <div>\r\n                <ul>\r\n                {moves.map((m,index) => (\r\n                    <li \r\n                        key={m.id} \r\n                        onClick= { () => this.toggleVisible(index)}>\r\n                    {m.name}{this.state.showItems[index] ? \": \" + m.description : \"\"}\r\n                    </li>))}\r\n                </ul>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default MovesList;","import React, { Component } from 'react';\r\nimport MovesList from './MovesList';\r\n\r\nclass MoveComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {moves: []};\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        let token = localStorage.getItem(\"token\");\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/moves\", {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n            this.setState({moves: result});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <MovesList moves={this.state.moves}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoveComponent;","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass TrainingSessionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleForm = React.createRef();\r\n        this.state = {\r\n            lengthMin: 75,\r\n            inputErrorLengthMin: false,\r\n            inputErrorDate: false,\r\n            currentDate: new Date()\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.state.inputErrorLengthMin || this.state.inputErrorDate) {  \r\n            return;        \r\n        }\r\n        const data = new FormData(event.target);\r\n        var object = {};\r\n        data.forEach(function (value, key) {\r\n            object[key] = value;\r\n        });\r\n        var json = JSON.stringify(object);\r\n        let token = localStorage.getItem(\"token\");\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/trainingsessions/new\", {\r\n            method: 'POST',\r\n            body: json,\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n          }).then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.props.onNewTrainingSession(result);\r\n            })\r\n            .then(this.handleForm.current.reset());\r\n    }\r\n\r\n        \r\n\r\n    inputValidationMinutes = (event) => {\r\n        event.preventDefault();\r\n        let input = event.target.value;\r\n        if (!(/^(|[1-9][0-9]*)$/.test(input)) || input === \"\") {\r\n            this.setState({ inputErrorLengthMin: true })\r\n        } else {\r\n            this.setState({ inputErrorLengthMin: false })\r\n        }\r\n        this.setState({ lengthMin: event.target.value });\r\n    }\r\n\r\n    inputValidationDate = (date) => {\r\n        if(date === null) {\r\n            this.setState({\r\n                inputErrorDate: true,\r\n                currentDate: date\r\n            });\r\n        } else {\r\n            this.setState({\r\n                inputErrorDate: false,\r\n                currentDate: date\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} ref={this.handleForm}>\r\n                <label htmlFor=\"date\">Date</label>\r\n                <DatePicker \r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    selected={this.state.currentDate}\r\n                    onChange={this.inputValidationDate}\r\n                    dateFormat=\"yyyy-MM-dd\"/>\r\n                <label htmlFor=\"length\">Length(min)</label>\r\n                <input id=\"lengthMin\" name=\"lengthMin\" value={this.state.lengthMin} type=\"text\" onChange={this.inputValidationMinutes} />\r\n                <label htmlFor=\"trainingType\">Training type</label>\r\n                <select id=\"trainingType\" name=\"trainingType\">\r\n                    <option value=\"GI\">GI</option>\r\n                    <option value=\"NO_GI\">NO_GI</option>\r\n                    <option value=\"OPEN_MAT\">OPEN_MAT</option>\r\n                </select>\r\n                <button>Add session</button>\r\n                {this.state.inputErrorLengthMin && <p style={{color: \"red\"}}>Length must be an integer (above 0).</p>}\r\n                {this.state.inputErrorDate && <p style={{color: \"red\"}}>Please pick a date.</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TrainingSessionForm;","import React, { Component } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nclass TrainingSessionsList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          sessions: [],\r\n          deleteDialogOpen: false,\r\n          sessionID: \"\"\r\n        };\r\n    }\r\n  \r\n    handleDelete = (id) => {\r\n      let token = localStorage.getItem(\"token\");\r\n      fetch(process.env.REACT_APP_BACKEND_URL + `/trainingsessions/${id}/delete`, {\r\n          method: 'POST',\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json; charset=utf-8\"\r\n          }\r\n      })\r\n        .then(() => {\r\n          const updatedList = this.state.sessions.filter(session => session.id !== id)\r\n          this.setState({sessions: updatedList, deleteDialogOpen: false})\r\n      })\r\n    }\r\n  \r\n    openDeleteDialog = (id) => {\r\n      this.setState({ deleteDialogOpen: true, sessionID: id });\r\n    }\r\n  \r\n    closeDeleteDialog = () => {\r\n      this.setState({ deleteDialogOpen: false });\r\n    }\r\n  \r\n      render = () => {\r\n        let sessions = this.props.sessions;\r\n        const { deleteDialogOpen, sessionID } = this.state;\r\n        if (!sessions) {\r\n          return <div>Loading...</div>;\r\n        } else {\r\n          return (\r\n            <div>\r\n              <ul>\r\n                {sessions.map(session => (\r\n                    <li key={session.id}>\r\n                    {session.id} {session.date} {session.trainingType} {session.lengthMin} <button onClick={() => this.openDeleteDialog(session.id)} key={session.id}>x</button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <Dialog open={deleteDialogOpen} onClose={this.closeDeleteDialog} aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent><DialogContentText id=\"alert-dialog-description\">Are you sure you want to delete this training session?</DialogContentText></DialogContent>\r\n                <DialogActions>\r\n                  <button onClick={this.closeDeleteDialog}>No, keep this session</button>\r\n                  <button onClick={() => this.handleDelete(sessionID)}>Yes, delete this session</button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>);\r\n        }\r\n      }\r\n    }\r\n    \r\n    export default TrainingSessionsList;\r\n    ","import React, { Component } from 'react';\r\nimport TrainingSessionForm from './TrainingSessionForm';\r\nimport TrainingSessionList from './TrainingSessionsList';\r\n\r\nclass TrainingSessionComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: false,\r\n            isLoaded: false,\r\n            sessions: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let token = localStorage.getItem(\"token\");\r\n          fetch(process.env.REACT_APP_BACKEND_URL + \"/trainingsessions\", {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n          })\r\n            .then(res => res.json())\r\n            .then(\r\n              (result) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  sessions: result\r\n                });\r\n              },\r\n              // Note: it's important to handle errors here\r\n              // instead of a catch() block so that we don't swallow\r\n              // exceptions from actual bugs in components.\r\n              (error) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  error: true\r\n                });\r\n              }\r\n            )\r\n    }  \r\n\r\n    handleNewTrainingSession = (trainingSession) => {\r\n        let newSessions = this.state.sessions.slice();\r\n        newSessions.push(trainingSession);\r\n        this.setState({sessions: newSessions});\r\n    }\r\n\r\n    render = () => {\r\n        if(this.state.error) {\r\n            return (<div><TrainingSessionForm onNewTrainingSession={this.handleNewTrainingSession}/><p>Could not load training sessions..</p></div>)\r\n        } else {\r\n            return (<div><TrainingSessionForm onNewTrainingSession={this.handleNewTrainingSession}/><TrainingSessionList sessions={this.state.sessions}/></div>);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default TrainingSessionComponent;","import React, { Component } from 'react';\r\nimport MoveComponent from './moves/MoveComponent';\r\nimport TrainingSessionComponent from './trainingsessions/TrainingSessionComponent';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <p>Moves</p>\r\n            <MoveComponent />\r\n            <TrainingSessionComponent />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Dashboard","import React, { Component } from 'react';\r\n\r\nclass RegistrationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            registrationSuccessful: false,\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        var object = {};\r\n        data.forEach(function (value, key){\r\n            object[key] = value;\r\n        });\r\n        var json = JSON.stringify(object);\r\n        fetch(process.env.REACT_APP_BACKEND_URL + \"/user/register\", {\r\n            method: 'POST',\r\n            body: json,\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then(response => response.json().then((json) => ({json, response})))\r\n            .then(({json, response}) => {\r\n                if (!response.ok) {\r\n                    this.setState({ errorMessage: json.message, registrationSuccessful: false })\r\n                }\r\n                else {\r\n                    this.setState({ registrationSuccessful: true })\r\n                }\r\n            },\r\n            error => {\r\n                    console.log(\"error\", error);\r\n                  }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Username</label>\r\n                    <input id=\"username\" name=\"username\" type=\"text\"/>\r\n                    <label>Password</label>\r\n                    <input id=\"password\" name=\"password\" type=\"password\" />\r\n                    <button>Register</button>\r\n                </form>\r\n                <p>{this.state.registrationSuccessful ? \"Registration successful\" : this.state.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport LoginForm from './LoginForm'\r\nimport Dashboard from './Dashboard'\r\nimport RegistrationForm from './RegistrationForm'\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route path='https://steenstn.github.io/bjj' component={LoginForm}/>\r\n      <Route path='/bjj' component={LoginForm}/>\r\n      <Route exact path='/' component={LoginForm} />\r\n      <Route path='/register' component={RegistrationForm}/>\r\n      <Route path='https://steenstn.github.io/bjj/dashboard' component={Dashboard}/>\r\n      <Route path='/dashboard' component={Dashboard}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './Main';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}